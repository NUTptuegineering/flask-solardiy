import pandas as pd
import json
import os

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡πÅ‡∏•‡∏∞ JSON
base_path = "/Users/mm/Documents/Project_SolarDIY/static"
excel_path = os.path.join(base_path, "List_of_equip.xlsx")
json_path = os.path.join(base_path, "panel_list.json")

try:
    # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Sheet "Solarpanel"
    sheet_name = "Solarpanel"
    df = pd.read_excel(excel_path, sheet_name=sheet_name)

    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    rename_columns = {
        "Width(mm.)": "Width_m",
        "Length(mm.)": "Length_m"
    }
    df = df.rename(columns=rename_columns)

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ mm ‚Üí m ‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏î‡πÄ‡∏®‡∏©‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 3 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    if "Width_m" in df.columns:
        df["Width_m"] = (df["Width_m"] / 1000).round(3)
    if "Length_m" in df.columns:
        df["Length_m"] = (df["Length_m"] / 1000).round(3)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    required_columns = ["Brand", "Watt", "Width_m", "Length_m", "Price", "URL"]
    for col in required_columns:
        if col not in df.columns:
            raise ValueError(f"‚ùå Missing column: {col}")

    # ‡πÅ‡∏õ‡∏•‡∏á DataFrame ‡πÄ‡∏õ‡πá‡∏ô JSON
    data = {"status": "success", "data": df.to_dict(orient="records")}

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON
    with open(json_path, "w", encoding="utf-8") as json_file:
        json.dump(data, json_file, ensure_ascii=False, indent=4)

    print(f"‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å {excel_path} ‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
    print(f"üìÇ ‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡πà: {json_path}")

except Exception as e:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
